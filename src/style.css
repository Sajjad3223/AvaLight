@import "tailwindcss";

@font-face {
    font-family: "Nian";
    src: url(./fonts/Nian-Regular.woff2) format("woff2");
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: "Nian";
    src: url(./fonts/Nian-ExtraBold.woff2) format("woff2");
    font-weight: bold;
    font-style: normal;
}
@font-face {
    font-family: "Nian";
    src: url(./fonts/Nian-ExtraBold.woff2) format("woff2");
    font-weight: 800;
    font-style: normal;
}
@font-face {
    font-family: "Nian";
    src: url(./fonts/Nian-Black.woff2) format("woff2");
    font-weight: 900;
    font-style: normal;
}

:root,html{
    interpolate-size: allow-keywords;
    font-family: 'Nian';
    --txt-color:oklch(1 0 0);
    --primary:oklch(1 0 0);
    --bg:oklch(0 0 0);
    --surface:oklch(0.1591 0 0);
    --darkSurface:oklch(0.1286 0 0);
    --success:oklch(0.7692 0.1384 172.11);
    --warning:oklch(0.8609 0.1707 92.87);
    --danger:oklch(0.6008 0.2298 20.98);
    --info:oklch(0.5814 0.1559 254.42);
}

.container{
    @apply max-w-[1488px] mx-auto px-4 lg:px-0;
}

body{
    background-color: var(--bg);
    color:var(--txt-color);
}

@theme{
    --color-primary: var(--primary);
    --color-txt:var(--txt-color);
    --color-bg:var(--bg);
    --color-surface:var(--surface);
    --color-darkSurface:var(--darkSurface);
    --color-success:var(--success);
    --color-warning:var(--warning);
    --color-danger:var(--danger);
    --color-info:var(--info);
    --text-tiny:10px;
}

::-webkit-scrollbar{
    display: none;
}

.border{
    @apply border-white/10;
}

.nav-link{
    @apply opacity-60 hover:opacity-100 transition-opacity duration-200;
}
.active-link{
    text-shadow: 0 0 10px #FFFFFF;
}

#mobile-header{
    @apply transition-all duration-300;
}
.show-header{
    @apply opacity-100 translate-x-0;
}
.hide-header{
    @apply opacity-0 -translate-x-full;
}

/* Buttons */
.btn{
    @apply px-5 py-2 rounded-full text-sm lg:text-base flex items-center justify-center w-max transition-all duration-200;

    &.btn-icon{
        @apply flex items-center gap-2;
        &:not(&:has(span)){
            @apply p-2 rounded-full;
        }
    }

    &:disabled{
        @apply opacity-60;
        &:hover{
            box-shadow: none !important;
        }
    }

    &.btn-primary{
        @apply bg-primary text-black;
        &:hover{
            box-shadow: 0 0 32px 0 #FFFFFF40;
        }
        &.btn-outline{
            @apply border border-white/15 text-white bg-transparent;
            &:hover{
                @apply bg-surface;
                box-shadow: none;
            }
        }
        &.btn-flat{
            @apply bg-transparent text-white;
            &:hover{
                @apply  bg-surface bg-white/10;
                box-shadow: none;
            }
        }
    }

    &.btn-secondary,&.btn-dark{
        @apply bg-black text-white;
        &:hover{
            box-shadow: 0 0 32px 0 #00000040;
        }
        &.btn-outline{
            @apply border border-black text-white bg-transparent;
            &:hover{
                @apply bg-black/30;
                box-shadow: none;
            }
        }
        &.btn-flat{
            @apply bg-transparent text-white;
            &:hover{
                @apply bg-black;
                box-shadow: none;
            }
        }
    }

    &.btn-success{
        @apply bg-success text-white;
        &:hover{
            box-shadow: 0 0 32px 0 --alpha(var(--success) / 0.4);
        }
        &.btn-outline{
            @apply border border-success text-success bg-transparent;
            &:hover{
                @apply bg-success/30;
                box-shadow: none;
            }
        }
        &.btn-flat{
            @apply bg-transparent text-success;
            &:hover{
                @apply bg-success text-white;
                box-shadow: none;
            }
        }
    }

    &.btn-warning{
        @apply bg-warning text-white;
        &:hover{
            box-shadow: 0 0 32px 0 --alpha(var(--warning) / 0.4);
        }
        &.btn-outline{
            @apply border border-warning text-warning bg-transparent;
            &:hover{
                @apply bg-warning/30;
                box-shadow: none;
            }
        }
        &.btn-flat{
            @apply bg-transparent text-warning;
            &:hover{
                @apply bg-warning text-white;
                box-shadow: none;
            }
        }
    }

    &.btn-danger{
        @apply bg-danger text-white;
        &:hover{
            box-shadow: 0 0 32px 0 --alpha(var(--danger) / 0.4);
        }
        &.btn-outline{
            @apply border border-danger text-danger bg-transparent;
            &:hover{
                @apply bg-danger/30;
                box-shadow: none;
            }
        }
        &.btn-flat{
            @apply bg-transparent text-danger;
            &:hover{
                @apply bg-danger text-white;
                box-shadow: none;
            }
        }
    }
}

/* Divider */
.divider{
    @apply opacity-60 flex w-full items-center gap-4 px-4;

    &:after,&:before{
        @apply w-full h-px bg-white/30 content-[''] !px-0;
    }


    &.divider-left{
        @apply after:w-[2%];
    }
    &.divider-right{
        @apply before:w-[2%];
    }
    &.divider-empty{
        @apply gap-0 px-0;
    }
}

/* Inputs */
.form-input{
    @apply w-full flex flex-col gap-4;

    &:has(input[disabled]){
        @apply opacity-50;
    }

    & > label{
        @apply lg:text-xl pr-5;
    }
    & > input{
        @apply py-5 px-6 rounded-4xl border-2 border-white/10 focus:outline-none focus:border-white/60 lg:text-xl transition-all duration-300;

        &.input-error{
            @apply border-danger;
        }

        &.ltr{
            direction: ltr;
        }
    }
    & > span.error-message{
        @apply pr-5 hidden;
    }
    &:has(input.input-error) > span.error-message{
        @apply !block;
    }
}


/* Filter Overlay */
#filters-overlay {
    @apply lg:hidden fixed inset-0 z-20 flex items-end justify-end bg-black/50 backdrop-blur transition-all duration-300;

    &.hide-filters{
        @apply opacity-0 translate-y-full -z-20;
    }
    &.show-filters{
        @apply opacity-100 translate-y-0 z-20;
    }
}

/* Collapsable */
.collapsable{

    &  .collapsable-toggler  .collapsable-arrow{
        @apply transition-transform duration-300;
    }

    &:has(.collapsable-show) .collapsable-arrow{
        @apply rotate-180;
    }

    & > .collapsable-content{
        @apply transition-all duration-200;
        &.collapsable-hide{
            @apply max-h-0 overflow-clip py-0;
        }
        &.collapsable-show{
            @apply max-h-[500px] p-4;
        }
    }
}


/* Toggle Switch */
.switch {
    --button-width: 3.5em;
    --button-height: 2em;
    --toggle-diameter: 1.5em;
    --button-toggle-offset: calc((var(--button-height) - var(--toggle-diameter)) / 2);
    --toggle-shadow-offset: 10px;
    --toggle-wider: 3em;
    --color-grey: #fff;
    --color-green: #4296f4;
    direction: ltr;
}

.slider {
    display: inline-block;
    width: var(--button-width);
    height: var(--button-height);
    background-color: #78788029;
    border-radius: calc(var(--button-height) / 2);
    position: relative;
    transition: 0.3s all ease-in-out;
}

.slider::after {
    content: "";
    display: inline-block;
    width: var(--toggle-diameter);
    height: var(--toggle-diameter);
    background-color: #FFF;
    border-radius: calc(var(--toggle-diameter) / 2);
    position: absolute;
    top: var(--button-toggle-offset);
    transform: translateX(var(--button-toggle-offset));
    box-shadow: var(--toggle-shadow-offset) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
    transition: 0.3s all ease-in-out;
}

.switch input[type="checkbox"]:checked + .slider {
    background-color: #2D7BD4;
}

.switch input[type="checkbox"]:checked + .slider::after {
    transform: translateX(calc(var(--button-width) - var(--toggle-diameter) - var(--button-toggle-offset)));
    box-shadow: calc(var(--toggle-shadow-offset) * -1) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
}

.switch input[type="checkbox"] {
    display: none;
}

.switch input[type="checkbox"]:active + .slider::after {
    width: var(--toggle-wider);
}

.switch input[type="checkbox"]:checked:active + .slider::after {
    transform: translateX(calc(var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)));
}